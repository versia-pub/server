name: Build Docker Images

on:
    push:
        branches: ["*"]
        # Publish semver tags as releases.
        tags: ["v*.*.*"]
    pull_request:
        branches: ["main"]

jobs:
    lint:
        uses: ./.github/workflows/lint.yml

    check:
        uses: ./.github/workflows/check.yml

    tests:
        uses: ./.github/workflows/tests.yml

    detect-circular:
        uses: ./.github/workflows/circular-imports.yml

    build:
        if: ${{ success() }}
        needs: [lint, check, tests, detect-circular]
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            # This is used to complete the identity challenge
            # with sigstore/fulcio when running outside of PRs.
            id-token: write
        strategy:
            matrix:
                include:
                    - container: worker
                      image_name: ${{ github.repository_owner }}/worker
                      dockerfile: Worker.Dockerfile
                    - container: server
                      image_name: ${{ github.repository_owner }}/server
                      dockerfile: Dockerfile
        env:
            REGISTRY: ghcr.io

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Setup QEMU
              uses: docker/setup-qemu-action@v3
              with:
                  platforms: all

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log into registry ${{ env.REGISTRY }}
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ matrix.image_name }}
                  tags: |
                      type=schedule
                      type=ref,event=branch
                      type=ref,event=tag
                      type=ref,event=pr
                      type=sha

            - name: Get the commit hash
              run: echo "GIT_COMMIT=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_ENV

            - name: Build and push Docker image
              id: build-and-push
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  build-args: |
                      GIT_COMMIT=${{ env.GIT_COMMIT }}
                  file: ${{ matrix.dockerfile }}
                  provenance: mode=max
                  sbom: true
                  platforms: linux/amd64,linux/arm64
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
